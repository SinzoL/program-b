services:
  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    container_name: p2l-backend
    ports:
      - "8080:8080"
    environment:
      - P2L_ENV=production
      - P2L_HOST=0.0.0.0
      - P2L_PORT=8080
      # Python路径配置（适配整理后的结构）
      - PYTHONPATH=/app:/app/backend:/app/backend/model_p2l
      # 内存优化配置
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:128
      - OMP_NUM_THREADS=2
    volumes:
      - ./models:/app/models
      - ./p2l:/app/p2l:ro
      - ./logs:/app/logs
      # 更新配置文件挂载路径
      - ./backend/model_p2l:/app/backend/model_p2l:ro
      - ./backend/api_config.env:/app/api_config.env:ro
    restart: unless-stopped
    # 资源限制（适合轻量服务器）
    deploy:
      resources:
        limits:
          memory: 2.5G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/health')"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 300s  # 增加启动等待时间，因为可能需要下载模型
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  frontend:
    build: 
      context: .
      dockerfile: Dockerfile.frontend
    container_name: p2l-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.2'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 60s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Nginx 反向代理（可选，生产环境推荐）
  nginx:
    image: nginx:alpine
    container_name: p2l-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - production  # 使用 --profile production 启用
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

networks:
  default:
    name: p2l-network

volumes:
  logs:
    driver: local
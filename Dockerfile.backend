# P2L Backend Dockerfile - 轻量优化版
FROM python:3.10-slim

# 设置工作目录
WORKDIR /app

# 跳过系统包安装，使用 Python 内置的 urllib 进行健康检查
# 这样可以避免网络连接问题导致的构建失败

# 复制依赖文件
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt

# 复制整个项目结构以支持相对导入
COPY . .

# 创建必要目录
RUN mkdir -p /app/models /app/logs

# 确保脚本可执行
RUN chmod +x /app/ensure_model.py /app/model_utils.py

# 设置环境变量
ENV PYTHONPATH=/app
ENV P2L_ENV=production
ENV P2L_HOST=0.0.0.0
ENV P2L_PORT=8080

# 暴露端口
EXPOSE 8080

# 健康检查（使用 Python 而不是 curl）
HEALTHCHECK --interval=60s --timeout=15s --start-period=300s --retries=5 \
    CMD python -c "import urllib.request; urllib.request.urlopen('http://localhost:8080/health')" || exit 1

# 启动命令 - 先检查模型再启动服务
CMD ["/bin/bash", "-c", "echo '🐳 P2L Backend容器启动' && echo '🔍 检查P2L模型...' && python3 ensure_model.py && echo '🚀 启动backend服务...' && python -m backend.main"]